{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/ruslan/Documents/ps11/frontend/app/dashboard/posts/new/page.tsx"],"sourcesContent":["\"use client\"\n\n// pages/post-editor.jsx\nimport React, { useState, useRef } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { EditorContent, useEditor } from '@tiptap/react';\nimport StarterKit from '@tiptap/starter-kit';\nimport Image from '@tiptap/extension-image';\n\nexport default function PostEditor() {\n  const router = useRouter();\n  const [title, setTitle] = useState('');\n  // Ссылка на input для выбора файлов (изображения)\n  const fileInputRef = useRef(null);\n\n  // Инициализируем Tiptap‑редактор с базовым набором расширений и поддержкой изображений\n  const editor = useEditor({\n    extensions: [StarterKit, Image],\n    content: '<p>Начните писать...</p>',\n  });\n\n  // Функция для открытия диалога выбора файла\n  const addImage = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  // Обработка загрузки изображения:\n  // 1. Выбираем файл через невидимый input\n  // 2. Отправляем файл на бэкенд через API `/api/images/`\n  // 3. Получаем URL и вставляем изображение в редактор\n  const handleImageUpload = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const formData = new FormData();\n    formData.append('image', file);\n\n    try {\n      const res = await fetch('http://localhost:8000/api/images/', {\n        method: 'POST',\n        body: formData,\n        // Если API требует авторизации через cookie, раскомментируйте:\n        // credentials: 'include',\n      });\n\n      if (!res.ok) {\n        console.error('Ошибка загрузки изображения');\n        return;\n      }\n      const data = await res.json();\n      const imageUrl = data.url; // Ожидается, что API вернёт объект { url: \"...\" }\n\n      // Вставляем изображение в текущее положение курсора\n      editor.chain().focus().setImage({ src: imageUrl }).run();\n    } catch (error) {\n      console.error('Ошибка при загрузке изображения:', error);\n    }\n  };\n\n  // Отправка поста на API. Собираем HTML-содержимое редактора и заголовок.\n  const handleSubmit = async () => {\n    if (!editor) return;\n\n    const content = editor.getHTML();\n    const post = {\n      title,\n      content,\n      is_published: true, // или false, в зависимости от логики\n    };\n\n    try {\n      const res = await fetch('http://localhost:8000/api/posts/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          // Если требуется аутентификация через cookie, возможно, понадобится:\n          // credentials: 'include',\n        },\n        body: JSON.stringify(post),\n      });\n\n      if (!res.ok) {\n        console.error('Не удалось создать пост');\n        return;\n      }\n      const data = await res.json();\n      // После успешного создания можно, например, перейти на страницу созданного поста:\n      router.push(`/posts/${data.slug}`);\n    } catch (error) {\n      console.error('Ошибка при создании поста:', error);\n    }\n  };\n\n  return (\n    <div style={{ maxWidth: '800px', margin: '0 auto', padding: '20px' }}>\n      <h1>Новый пост</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Заголовок поста\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        style={{ width: '100%', padding: '10px', marginBottom: '10px', fontSize: '16px' }}\n      />\n\n      {/* Кнопка для добавления изображения */}\n      <div style={{ marginBottom: '10px' }}>\n        <button onClick={addImage} style={{ padding: '8px 12px' }}>\n          Вставить изображение\n        </button>\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          ref={fileInputRef}\n          onChange={handleImageUpload}\n          style={{ display: 'none' }}\n        />\n      </div>\n\n      {/* Сам редактор */}\n      <EditorContent editor={editor} />\n\n      <button\n        onClick={handleSubmit}\n        style={{ marginTop: '20px', padding: '10px 20px', fontSize: '16px' }}\n      >\n        Опубликовать\n      </button>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA,wBAAwB;AACxB;AACA;AAEA;AACA;AAFA;;;AALA;;;;;;AASe,SAAS;;IACtB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,kDAAkD;IAClD,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IAE5B,uFAAuF;IACvF,MAAM,SAAS,CAAA,GAAA,qKAAA,CAAA,YAAS,AAAD,EAAE;QACvB,YAAY;YAAC,8JAAA,CAAA,UAAU;YAAE,kKAAA,CAAA,UAAK;SAAC;QAC/B,SAAS;IACX;IAEA,4CAA4C;IAC5C,MAAM,WAAW;QACf,IAAI,aAAa,OAAO,EAAE;YACxB,aAAa,OAAO,CAAC,KAAK;QAC5B;IACF;IAEA,kCAAkC;IAClC,yCAAyC;IACzC,wDAAwD;IACxD,qDAAqD;IACrD,MAAM,oBAAoB,OAAO;QAC/B,MAAM,OAAO,MAAM,MAAM,CAAC,KAAK,CAAC,EAAE;QAClC,IAAI,CAAC,MAAM;QAEX,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,SAAS;QAEzB,IAAI;YACF,MAAM,MAAM,MAAM,MAAM,qCAAqC;gBAC3D,QAAQ;gBACR,MAAM;YAGR;YAEA,IAAI,CAAC,IAAI,EAAE,EAAE;gBACX,QAAQ,KAAK,CAAC;gBACd;YACF;YACA,MAAM,OAAO,MAAM,IAAI,IAAI;YAC3B,MAAM,WAAW,KAAK,GAAG,EAAE,kDAAkD;YAE7E,oDAAoD;YACpD,OAAO,KAAK,GAAG,KAAK,GAAG,QAAQ,CAAC;gBAAE,KAAK;YAAS,GAAG,GAAG;QACxD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,oCAAoC;QACpD;IACF;IAEA,yEAAyE;IACzE,MAAM,eAAe;QACnB,IAAI,CAAC,QAAQ;QAEb,MAAM,UAAU,OAAO,OAAO;QAC9B,MAAM,OAAO;YACX;YACA;YACA,cAAc;QAChB;QAEA,IAAI;YACF,MAAM,MAAM,MAAM,MAAM,oCAAoC;gBAC1D,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAGlB;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,IAAI,CAAC,IAAI,EAAE,EAAE;gBACX,QAAQ,KAAK,CAAC;gBACd;YACF;YACA,MAAM,OAAO,MAAM,IAAI,IAAI;YAC3B,kFAAkF;YAClF,OAAO,IAAI,CAAC,CAAC,OAAO,EAAE,KAAK,IAAI,EAAE;QACnC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;QAC9C;IACF;IAEA,qBACE,6LAAC;QAAI,OAAO;YAAE,UAAU;YAAS,QAAQ;YAAU,SAAS;QAAO;;0BACjE,6LAAC;0BAAG;;;;;;0BACJ,6LAAC;gBACC,MAAK;gBACL,aAAY;gBACZ,OAAO;gBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;gBACxC,OAAO;oBAAE,OAAO;oBAAQ,SAAS;oBAAQ,cAAc;oBAAQ,UAAU;gBAAO;;;;;;0BAIlF,6LAAC;gBAAI,OAAO;oBAAE,cAAc;gBAAO;;kCACjC,6LAAC;wBAAO,SAAS;wBAAU,OAAO;4BAAE,SAAS;wBAAW;kCAAG;;;;;;kCAG3D,6LAAC;wBACC,MAAK;wBACL,QAAO;wBACP,KAAK;wBACL,UAAU;wBACV,OAAO;4BAAE,SAAS;wBAAO;;;;;;;;;;;;0BAK7B,6LAAC,qKAAA,CAAA,gBAAa;gBAAC,QAAQ;;;;;;0BAEvB,6LAAC;gBACC,SAAS;gBACT,OAAO;oBAAE,WAAW;oBAAQ,SAAS;oBAAa,UAAU;gBAAO;0BACpE;;;;;;;;;;;;AAKP;GA1HwB;;QACP,qIAAA,CAAA,YAAS;QAMT,qKAAA,CAAA,YAAS;;;KAPF"}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}