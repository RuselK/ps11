{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/ruslan/Documents/ps11/frontend/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/ruslan/Documents/ps11/frontend/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,sMAAM,UAAU,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,kKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///home/ruslan/Documents/ps11/frontend/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///home/ruslan/Documents/ps11/frontend/services/imagesService.ts"],"sourcesContent":["import { AxiosResponse } from 'axios';\nimport apiClient from '@/services/apiClient';\n\nexport interface UploadedImage {\n  url: string;\n}\n\n/**\n * Upload an image via POST /api/images/\n * \n * The request body (multipart/form-data) must include the file field named \"image\".\n * Your OpenAPI schema (Body_upload_image_api_images__post) requires a single \"image\" property.\n */\nexport async function uploadImage(file: File): Promise<AxiosResponse<UploadedImage>> {\n  const formData = new FormData();\n  formData.append('image', file);\n\n  return apiClient.post<UploadedImage>('/api/images/', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  });\n}\n\n/**\n * Delete an image by filename via DELETE /api/images/{filename}\n */\nexport async function deleteImage(filename: string): Promise<AxiosResponse<void>> {\n  return apiClient.delete<void>(`/api/images/${encodeURIComponent(filename)}`);\n}\n"],"names":[],"mappings":";;;;AACA;;AAYO,eAAe,YAAY,IAAU;IAC1C,MAAM,WAAW,IAAI;IACrB,SAAS,MAAM,CAAC,SAAS;IAEzB,OAAO,qHAAA,CAAA,UAAS,CAAC,IAAI,CAAgB,gBAAgB,UAAU;QAC7D,SAAS;YACP,gBAAgB;QAClB;IACF;AACF;AAKO,eAAe,YAAY,QAAgB;IAChD,OAAO,qHAAA,CAAA,UAAS,CAAC,MAAM,CAAO,CAAC,YAAY,EAAE,mBAAmB,WAAW;AAC7E"}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///home/ruslan/Documents/ps11/frontend/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-primary/10\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,0CAA0C;QACvD,GAAG,KAAK;;;;;;AAGf"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file:///home/ruslan/Documents/ps11/frontend/components/dashboard/tipTapEditor.tsx"],"sourcesContent":["\"use client\"\n\nimport { useCallback, useEffect } from \"react\"\nimport { useEditor, EditorContent } from \"@tiptap/react\"\nimport StarterKit from \"@tiptap/starter-kit\"\nimport Image from \"@tiptap/extension-image\"\nimport { Button } from \"@/components/ui/button\"\nimport { Bold, Italic, List, ListOrdered, Heading2, Heading3, Heading4, ImageIcon } from \"lucide-react\"\nimport { uploadImage as serviceUploadImage } from \"@/services/imagesService\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\n\ninterface TiptapEditorProps {\n  content: string\n  onChange: (content: string) => void\n}\n\nexport function TiptapEditor({ content, onChange }: TiptapEditorProps) {\n  // 1. Initialize the editor\n  const editor = useEditor({\n    extensions: [StarterKit, Image],\n    content,\n    onUpdate: ({ editor }) => {\n      onChange(editor.getHTML())\n    },\n  })\n\n  // 2. Single function to handle file -> imagesService.uploadImage\n  const handleUploadImage = useCallback(async (file: File) => {\n    try {\n      const response = await serviceUploadImage(file)\n      return response.data.url\n    } catch (error) {\n      console.error(\"Ошибка при загрузке изображения:\", error)\n      return null\n    }\n  }, [])\n\n  // 3. Prompt for file -> upload -> insert into editor\n  const addImage = useCallback(() => {\n    const input = document.createElement(\"input\")\n    input.type = \"file\"\n    input.accept = \"image/*\"\n\n    input.onchange = async () => {\n      if (input.files?.length) {\n        const file = input.files[0]\n        const imageUrl = await handleUploadImage(file)\n        if (imageUrl) {\n          editor?.chain().focus().setImage({ src: imageUrl }).run()\n        }\n      }\n    }\n    input.click()\n  }, [editor, handleUploadImage])\n\n  // 4. Handle paste events (for images)\n  const handlePaste = useCallback(\n    (event: ClipboardEvent) => {\n      const items = event.clipboardData?.items\n      if (items) {\n        for (let i = 0; i < items.length; i++) {\n          if (items[i].type.indexOf(\"image\") !== -1) {\n            event.preventDefault()\n\n            const file = items[i].getAsFile()\n            if (file) {\n              handleUploadImage(file).then((imageUrl) => {\n                if (imageUrl) {\n                  editor?.chain().focus().setImage({ src: imageUrl }).run()\n                }\n              })\n            }\n            break\n          }\n        }\n      }\n    },\n    [editor, handleUploadImage]\n  )\n\n  // 5. Add paste event listener once\n  useEffect(() => {\n    if (!editor) return\n\n    const view = editor.view\n    const dom = view.dom\n\n    dom.addEventListener(\"paste\", handlePaste)\n    return () => {\n      dom.removeEventListener(\"paste\", handlePaste)\n    }\n  }, [editor, handlePaste])\n\n  // 6. Render nothing if editor is not ready\n  if (!editor) {\n    return <Skeleton className=\"w-full h-[252px]\" />\n  }\n\n  // 7. Render editor + toolbar\n  return (\n    <div className=\"border rounded-md\">\n      <div className=\"flex flex-wrap gap-2 p-2 border-b\">\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          size=\"icon\"\n          onClick={() => editor.chain().focus().toggleBold().run()}\n          className={editor.isActive(\"bold\") ? \"bg-muted\" : \"\"}\n        >\n          <Bold className=\"h-4 w-4\" />\n        </Button>\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          size=\"icon\"\n          onClick={() => editor.chain().focus().toggleItalic().run()}\n          className={editor.isActive(\"italic\") ? \"bg-muted\" : \"\"}\n        >\n          <Italic className=\"h-4 w-4\" />\n        </Button>\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          size=\"icon\"\n          onClick={() => editor.chain().focus().toggleHeading({ level: 2 }).run()}\n          className={editor.isActive(\"heading\", { level: 2 }) ? \"bg-muted\" : \"\"}\n        >\n          <Heading2 className=\"h-4 w-4\" />\n        </Button>\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          size=\"icon\"\n          onClick={() => editor.chain().focus().toggleHeading({ level: 3 }).run()}\n          className={editor.isActive(\"heading\", { level: 3 }) ? \"bg-muted\" : \"\"}\n        >\n          <Heading3 className=\"h-4 w-4\" />\n        </Button>\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          size=\"icon\"\n          onClick={() => editor.chain().focus().toggleHeading({ level: 4 }).run()}\n          className={editor.isActive(\"heading\", { level: 4 }) ? \"bg-muted\" : \"\"}\n        >\n          <Heading4 className=\"h-4 w-4\" />\n        </Button>\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          size=\"icon\"\n          onClick={() => editor.chain().focus().toggleBulletList().run()}\n          className={editor.isActive(\"bulletList\") ? \"bg-muted\" : \"\"}\n        >\n          <List className=\"h-4 w-4\" />\n        </Button>\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          size=\"icon\"\n          onClick={() => editor.chain().focus().toggleOrderedList().run()}\n          className={editor.isActive(\"orderedList\") ? \"bg-muted\" : \"\"}\n        >\n          <ListOrdered className=\"h-4 w-4\" />\n        </Button>\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          size=\"icon\"\n          onClick={addImage}\n        >\n          <ImageIcon className=\"h-4 w-4\" />\n        </Button>\n      </div>\n      <EditorContent editor={editor} className=\"p-4 min-h-[200px]\" />\n    </div>\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 500, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 506, "column": 0}, "map": {"version":3,"sources":["file:///home/ruslan/Documents/ps11/frontend/services/postService.ts"],"sourcesContent":["import { AxiosResponse } from 'axios';\nimport apiClient from './apiClient';\n\n\n/**\n * Shape for creating a post (POST /api/posts/).\n * Matches the OpenAPI schema PostCreate.\n */\nexport interface PostCreate {\n  title: string;\n  content: string;\n  is_published: boolean;\n}\n\n/**\n * Shape for updating a post (PUT /api/posts/{post_id}).\n * Matches the OpenAPI schema PostUpdate.\n */\nexport interface PostUpdate {\n  title: string;\n  content: string;\n  is_published: boolean;\n}\n\n/**\n * Shape of a Post object returned by the API.\n * Matches the OpenAPI schema PostRead.\n */\nexport interface PostRead {\n  id: number;\n  title: string;\n  slug: string;\n  content: string;\n  is_published: boolean;\n  created_at: string; // date-time\n  updated_at: string; // date-time\n}\n\n/**\n * Page type returned by GET /api/posts/ (paginated list).\n * Matches Page_TypeVar_Customized_PostRead_ in the OpenAPI spec.\n */\nexport interface PaginatedPosts {\n  items: PostRead[];\n  total: number | null;\n  page: number | null;\n  size: number | null;\n  pages: number | null;\n}\n\nexport interface MostViewedPostRead {\n  post_id: number\n  title: string\n  total_views: number\n  unique_views: number\n}\n\n/**\n * Shape for post statistics (GET /api/posts/statistics).\n * Matches the OpenAPI schema PostStatistics.\n */\nexport interface PostStatistics {\n  total_posts: number;\n  total_published_posts: number;\n  total_draft_posts: number;\n}\n\n/**\n * Shape for post views statistics (GET /api/posts/views).\n * Matches the OpenAPI schema PostViewsStatistics.\n */\nexport interface PostViewsStatistics {\n  total_views: number;\n  total_unique_views: number;\n  date: string; // date-time\n}\n\n/**\n * Fetch a paginated list of posts.\n * GET /api/posts/?pageNumber=&pageSize=\n */\nexport async function getPosts(\n  pageNumber = 1,\n  pageSize = 10\n): Promise<AxiosResponse<PaginatedPosts>> {\n  return apiClient.get<PaginatedPosts>('/api/admin/posts/', {\n    params: { pageNumber, pageSize },\n  });\n}\n\n/**\n * Fetch a paginated list of published posts.\n * GET /api/posts/?pageNumber=&pageSize=\n */\nexport async function getPublishedPosts(\n  pageNumber = 1,\n  pageSize = 10\n): Promise<AxiosResponse<PaginatedPosts>> {\n  return apiClient.get<PaginatedPosts>('/api/posts/', {\n    params: { pageNumber, pageSize },\n  });\n}\n\n\n/**\n * Fetch a single post by its slug.\n * GET /api/posts/{slug}\n */\nexport async function getPostBySlug(slug: string): Promise<AxiosResponse<PostRead>> {\n  return apiClient.get<PostRead>(`/api/posts/${encodeURIComponent(slug)}`);\n}\n\n/**\n * Fetch a single post by its ID.\n * GET /api/posts/{post_id}\n */\nexport async function getPostById(postId: number): Promise<AxiosResponse<PostRead>> {\n  return apiClient.get<PostRead>(`/api/admin/posts/${postId}`);\n}\n\n/**\n * Create a new post.\n * POST /api/posts/\n */\nexport async function createPost(\n  postData: PostCreate\n): Promise<AxiosResponse<PostRead>> {\n  return apiClient.post<PostRead>('/api/admin/posts/', postData);\n}\n\n/**\n * Update an existing post by ID.\n * PUT /api/posts/{post_id}\n */\nexport async function updatePost(\n  postId: number,\n  postData: PostUpdate\n): Promise<AxiosResponse<PostRead>> {\n  return apiClient.put<PostRead>(`/api/admin/posts/${postId}`, postData);\n}\n\n/**\n * Delete a post by ID.\n * DELETE /api/posts/{post_id}\n */\nexport async function deletePost(postId: number): Promise<AxiosResponse<void>> {\n  return apiClient.delete<void>(`/api/admin/posts/${postId}`);\n}\n\n/**\n * Get post statistics.\n * GET /api/posts/statistics\n */\nexport async function getPostStatistics(): Promise<AxiosResponse<PostStatistics>> {\n  return apiClient.get<PostStatistics>('/api/admin/posts/statistics');\n}\n\n/**\n * Get post views statistics.\n * GET /api/posts/views\n */\nexport async function getPostViewsStatistics(\n  startDate?: string,\n  endDate?: string\n): Promise<AxiosResponse<PostViewsStatistics[]>> {\n  return apiClient.get<PostViewsStatistics[]>(\"/api/admin/posts/views\", {\n    params: {\n      ...(startDate ? { start_date: startDate } : {}),\n      ...(endDate ? { end_date: endDate } : {}),\n    },\n  })\n}\n\n/**\n * Fetch the top `limit` most viewed posts.\n */\nexport async function getMostViewedPosts(\n  limit = 5\n): Promise<AxiosResponse<MostViewedPostRead[]>> {\n  return apiClient.get<MostViewedPostRead[]>(\"/api/admin/posts/most-views\", {\n    params: { limit },\n  })\n}"],"names":[],"mappings":";;;;;;;;;;;;AACA;;AAgFO,eAAe,SACpB,aAAa,CAAC,EACd,WAAW,EAAE;IAEb,OAAO,qHAAA,CAAA,UAAS,CAAC,GAAG,CAAiB,qBAAqB;QACxD,QAAQ;YAAE;YAAY;QAAS;IACjC;AACF;AAMO,eAAe,kBACpB,aAAa,CAAC,EACd,WAAW,EAAE;IAEb,OAAO,qHAAA,CAAA,UAAS,CAAC,GAAG,CAAiB,eAAe;QAClD,QAAQ;YAAE;YAAY;QAAS;IACjC;AACF;AAOO,eAAe,cAAc,IAAY;IAC9C,OAAO,qHAAA,CAAA,UAAS,CAAC,GAAG,CAAW,CAAC,WAAW,EAAE,mBAAmB,OAAO;AACzE;AAMO,eAAe,YAAY,MAAc;IAC9C,OAAO,qHAAA,CAAA,UAAS,CAAC,GAAG,CAAW,CAAC,iBAAiB,EAAE,QAAQ;AAC7D;AAMO,eAAe,WACpB,QAAoB;IAEpB,OAAO,qHAAA,CAAA,UAAS,CAAC,IAAI,CAAW,qBAAqB;AACvD;AAMO,eAAe,WACpB,MAAc,EACd,QAAoB;IAEpB,OAAO,qHAAA,CAAA,UAAS,CAAC,GAAG,CAAW,CAAC,iBAAiB,EAAE,QAAQ,EAAE;AAC/D;AAMO,eAAe,WAAW,MAAc;IAC7C,OAAO,qHAAA,CAAA,UAAS,CAAC,MAAM,CAAO,CAAC,iBAAiB,EAAE,QAAQ;AAC5D;AAMO,eAAe;IACpB,OAAO,qHAAA,CAAA,UAAS,CAAC,GAAG,CAAiB;AACvC;AAMO,eAAe,uBACpB,SAAkB,EAClB,OAAgB;IAEhB,OAAO,qHAAA,CAAA,UAAS,CAAC,GAAG,CAAwB,0BAA0B;QACpE,QAAQ;YACN,GAAI,YAAY;gBAAE,YAAY;YAAU,IAAI,CAAC,CAAC;YAC9C,GAAI,UAAU;gBAAE,UAAU;YAAQ,IAAI,CAAC,CAAC;QAC1C;IACF;AACF;AAKO,eAAe,mBACpB,QAAQ,CAAC;IAET,OAAO,qHAAA,CAAA,UAAS,CAAC,GAAG,CAAuB,+BAA+B;QACxE,QAAQ;YAAE;QAAM;IAClB;AACF"}},
    {"offset": {"line": 573, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 579, "column": 0}, "map": {"version":3,"sources":["file:///home/ruslan/Documents/ps11/frontend/app/dashboard/posts/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { useParams, useRouter } from \"next/navigation\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Label } from \"@/components/ui/label\"\nimport { Input } from \"@/components/ui/input\"\nimport { Button } from \"@/components/ui/button\"\nimport { TiptapEditor } from \"@/components/dashboard/tipTapEditor\"\nimport { getPostById, updatePost } from \"@/services/postService\"\nimport { toast } from \"@/hooks/use-toast\" // or your own toast logic\nimport { AxiosError } from \"axios\"\n\nexport default function EditPostPage() {\n  const router = useRouter()\n  const { id } = useParams() as { id: string }\n\n  // Local state\n  const [title, setTitle] = useState(\"\")\n  const [content, setContent] = useState(\"<p>Загрузка...</p>\")\n  const [isPublished, setIsPublished] = useState(false)\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [loading, setLoading] = useState(true)\n  const [postId, setPostId] = useState<number | null>(null)\n\n  // 1. Load the existing post via ID\n  useEffect(() => {\n    if (!id) return\n\n    const numericId = parseInt(id, 10)\n    setPostId(numericId)\n\n    getPostById(numericId)\n      .then((res) => {\n        const post = res.data\n        setTitle(post.title)\n        setContent(post.content)\n        setIsPublished(post.is_published)\n      })\n      .catch((error) => {\n        console.error(\"Error fetching post:\", error)\n        toast({\n          title: \"Ошибка\",\n          description: \"Не удалось загрузить пост.\",\n          variant: \"destructive\",\n        })\n        // Optionally redirect or handle error\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [id, toast])\n\n  // 2. Handle form submission => update post\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!postId) return\n\n    setIsSubmitting(true)\n    try {\n      await updatePost(postId, { title, content, is_published: isPublished })\n      toast({\n        title: \"Успешно\",\n        description: \"Пост успешно обновлен\",\n      })\n      router.push(\"/dashboard/posts\")\n    } catch (error) {\n      console.error(\"Error updating post:\", error)\n\n      if (error instanceof AxiosError) {\n        toast({\n          title: \"Ошибка\",\n          description:\n            error.response?.data.detail ||\n            \"Не удалось обновить пост. Попробуйте снова.\",\n          variant: \"destructive\",\n        })\n      } else {\n        toast({\n          title: \"Ошибка\",\n          description: \"Не удалось обновить пост. Попробуйте снова.\",\n          variant: \"destructive\",\n        })\n      }\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  if (loading) {\n    return <div>Загрузка...</div>\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"text-2xl md:text-3xl\">Редактировать пост</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          {/* Title */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"title\">Название</Label>\n            <Input\n              id=\"title\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              required\n            />\n          </div>\n\n          {/* Content via TipTap */}\n          <div className=\"space-y-2\">\n            <Label>Содержание</Label>\n            <TiptapEditor content={content} onChange={setContent} />\n          </div>\n\n          {/* Publish checkbox */}\n          <div className=\"flex items-center space-x-2\">\n            <input\n              type=\"checkbox\"\n              id=\"isPublished\"\n              checked={isPublished}\n              onChange={(e) => setIsPublished(e.target.checked)}\n              className=\"rounded border-gray-300 text-primary focus:ring-primary\"\n            />\n            <Label htmlFor=\"isPublished\">Опубликован</Label>\n          </div>\n\n          {/* Submit button */}\n          <Button type=\"submit\" disabled={isSubmitting}>\n            {isSubmitting ? \"Сохранение...\" : \"Сохранить изменения\"}\n          </Button>\n        </form>\n      </CardContent>\n    </Card>\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 811, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}